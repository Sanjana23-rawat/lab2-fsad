# -*- coding: utf-8 -*-
"""Lab2-exercise1-fsad.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WwsmBarA-eXFaNQg_iBWRBEjCjej-ahz

# generateToken.**py**
"""

import jwt
import time
import os

os.environ['JWT_SECRET'] = "sanjua1"
# Secret key (replace with your own)
secret = os.getenv('JWT_SECRET')

# Payload
payload = {
    "username": "bits-pilani",
    "userID": 123,
    "exp": int(time.time()) + 60 * 60  # Add expiration time (1 hour)
}

# Payload2
payload2 = {
    "username": "sap-labs",
    "userID": 528723,
    "exp": int(time.time()) + 60 * 60  # Add expiration time (1 hour)
}


# Generate JWT
token = jwt.encode(payload2, secret, algorithm='HS256')

print(token)



"""# verifyToken.py"""

import jwt
import os

# Received token
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImJpdHMtcGlsYW5pIiwidXNlcklEIjoxMjMsImV4cCI6MTcxNjI4NTgxOH0.Tftv8vdvaWc0obNrcHLjqdcXLTiNDUlbO89Os6mVRno"

# Secret key (same as used for generation)
secret = os.getenv('JWT_SECRET')
print(secret)

try:
    decoded = jwt.decode(token, secret, algorithms=['HS256'])
    print(decoded)
except jwt.exceptions.PyJWTError as e:
    print("Invalid JWT:", e)

from cryptography.hazmat.primitives.asymmetric import rsa
from cryptography.hazmat.primitives import serialization

privateKey = rsa.generate_private_key(
    public_exponent=65537,
    key_size=2048,
)
publicKey = privateKey.public_key()
print(publicKey , privateKey)

token = jwt.encode(payload, privateKey, 'RS256')
print(token)

decoded = jwt.decode(token, publicKey, ['RS256'])
decoded

